privated struct tools{
  array_prime_number[]
  count
}

function solve(my_goldbach_sums) {
  count := 0
  for (i = 0 to my_goldbach_sums->count) {
    number_t my_number_t = my_goldbach_sums->numbers[i]
    array_prime_number = get prime numbers form my_number_t->number
    combinaciones(my_number_t)
  }

}

function combinaciones(my_number_t) {
  total_combinations := 0
  if (my_number_t->number is even) {

    for(i = 0 to tools->count){
      for(j = i to tools->count){
        if my_number_t->number = tools->array_prime_number[i] + tools->array_prime_number[j] save sums numbers
          if my_number_t->number is negative_t save sums
      }
    }

  }else{

    for(i = 0 to tools->count){
      for(j = i to tools->count){
        for(h = j to tools->count){
          if my_number_t->number = tools->array_prime_number[i] + tools->array_prime_number[j] save sums numbers
          if my_number_t->number is negative_t save sums
        }
      }
    }
  }
}
