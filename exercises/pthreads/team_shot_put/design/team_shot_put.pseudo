struct privateStruct{
    publicStruct* general
    result[]
}

struct publicStruct{
    number_Atletas
}

procedure main(argc, argv[]) {
    privateStruct structTeam1
    privateStruct structTeam2
    publicStruct structGeneral
    team1->structGeneral = &structGeneral
    team2->structGeneral = &structGeneral
    structGeneral.number_Atletas = argv[1]
    error = false
    if (structGeneral.number_Atletas is impar) {
        createThread team1(teams(structTeam1))
        createThread team2(teams(structTeam2))
    } else {
        print "Error: the number is not odd"
    }
}

procedure teams(structTeam) {
    for (i = 0 to *(structTeam.structGeneral.number_Atletas)) {
        structTeam.result[i] = createThread(athletes(i))
    }
}

procedure athletes(i) {
    large_number = 0
    ranadom_number = 0
    for (i = 0 to 3) {
        ranadom_number = rand(0.0 to 25.0)
        if(ranadom_number > large_number) {
            large_number = ranadom_number
        }
    }
    print "Athleta number " i ": " large_number "m"
    return large_number
}
